[buildout]
extends = base.cfg

parts +=
# debugging tools
    py
    omelette
    test

# deployment tools
    fabfile
    fabric

# generate config files in ./etc
    qa-ini

sqlalchemy_url = sqlite:///%(here)s/../var/pyramidpayment.db


# =========================
# Develop external packages
# =========================
extensions += mr.developer
sources = sources
auto-checkout = *
develop =
    src/pyramid.payment
    src/paymentintegrations

[sources]
niteoweb.fabfile = git git@github.com:niteoweb/niteoweb.fabfile.git
pyramid.payment = git https://github.com/rijkstofberg/pyramid.payment.git
paymentintegrations = git https://github/com:rijkstofberg/paymentintegrations.git

# =============================================================
# Prepare a python interpreter with all buildout eggs installed
# =============================================================
[py]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
extra-paths = ${buildout:directory}
dependent-scripts = true
interpreter = py


# ===============================================
# Mirrors python namespaces into one handy folder
# ===============================================
[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


# =====================================
# Prepare commands for making a release
# =====================================
[releaser]
recipe = zc.recipe.egg
eggs = jarn.mkrelease


# ==========================================
# Prepare test-runner for running unit tests
# ==========================================
[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
eggs =
    ${buildout:eggs}


# ====================================
# Configure Fabric deployment commands
# ====================================
[fabric]
recipe = zc.recipe.egg
eggs =
    Fabric
    niteoweb.fabfile

[fabfile]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/fabfile.py.in
output = ${buildout:directory}/fabfile.py


# ==========================================
# Generate config files from ./etc_templates
# ==========================================
[qa-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/qa.ini.in
output = ${buildout:directory}/etc/qa.ini
port = 8080
